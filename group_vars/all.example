group_vars:
  openstack:

    images:
      - name: cirros-0.5.2
        download_url: "http://download.cirros-cloud.net/0.5.2/cirros-0.5.2-x86_64-disk.img"
        cpu_arch: "x86_64"
        distro: "cirros"
      - name: ubuntu-22.04
        download_url: "https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img"
        cpu_arch: "x86_64"
        distro: "ubuntu"

    networks:
      - name: public
        #mtu: 1500

        # A difference between external network or not is that the options of openstack are different.
        # ex)
        #   * `openstack subnet create` for an internal network
        #     openstack subnet create --network ${subnet.network} --allocation-pool start=${subnet_pool_start},end=${subnet_pool_end} --subnet-range ${subnet_range} --dns-nameserver ${dns_name01} ... ${subnet_name}
        #   * `openstack subnet create` for an external network
        #     openstack subnet create --network ${subnet.network} --allocation-pool start=${subnet_pool_start},end=${subnet_pool_end} --subnet-range ${subnet_range} --dns-nameserver ${dns_name01} ... ${subnet_name}
        external: True
        #
        # "provider.physical.network" and "provider.network.type" will be passed as a value of option
        # "--provider-physical-network" and "--provider-network-type" of a command "openstack network create".
        # These options will connect virtual networks to the physical interface (ex: enp1s0) by refering
        # the configurations in the file "ml2_conf.ini" and "linuxbridge_agent.ini".
        #
        #   * /etc/neutron/plugins/ml2/ml2_conf.ini
        #   [ml2_type_flat]
        #   flat_networks = provider
        # 
        #   * /etc/neutron/plugins/ml2/linuxbridge_agent.ini
        #   [linux_bridge]
        #   physical_interface_mappings = provider:br0
        #
        # "provider.physical.network" is an optional parameter(default: "provider").
        # "provider.network.type" is an optional parameter(default: "flat").
        #
        provider:
          physical:
            network: provider
          network:
            type: flat
      - name: private_net
        # The size of MTU should be set less than or equals 1450(VXLAN) on physical environment. If you will build an OpenStack environment
        # on KVM instances or any virtual instances that is belonging VXLAN segment, you should specify less than 1450(1400 for example) because packets
        # will be capcelated 2 times on your virtual environment and OpenStack.
        # If you want to use Geneve instead, you should specify MTU less than or equals 1442 on physical environment.
        # The situation is similer to VXLAN when you will build an OpenStack with Geneve on any environment variable.
        # Summaries:
        # * 1450 (VLAN on physical OpenStack environment)
        # * 1400 (VLAN on another virtual network(ex. LVM) OpenStack environment)
        # * 1442 (Geneve on physical OpenStack environment)
        # * 1400 (Geneve on another virtual network(ex. LVM) OpenStack environment)
        mtu: 1442
        provider:
          network:
            # Type should be specified as 'geneve' so far in private network if you chose network driver 'OVN'.
            # Type will be ignored in private network if you chose network driver 'Linux Bridge'.
            type: geneve
            # segment: VLAN ID for VLAN networks or Tunnel ID for GENEVE networks.
            #          If this network is private('external: False' or abbribiated), provider_segment is required.
            segment: 101

    subnets:
      # Parameters below are follows parameters documented in https://docs.ansible.com/ansible/latest/collections/openstack/cloud/subnet_module.html#ansible-collections-openstack-cloud-subnet-module
      - name: public_subnet
        network_name: "public"
        cidr: 172.31.0.0/16
        allocation_pool_start: "172.31.230.2"
        allocation_pool_end: "172.31.230.254"
        enable_dhcp: False
      - name: private_subnet
        network_name: "private_net"
        cidr: 192.168.255.0/24
        allocation_pool_start: "192.168.255.2"
        allocation_pool_end: "192.168.255.254"
        dns_nameservers:
          - 172.31.0.1
          - 8.8.8.8
          - 8.8.4.4

    servers:
      - name: vm1
        image: cirros-0.5.2
        # A variable 'ssh_public_key_pair_name' is optional.
        # A server will be created containing with ssh public key pair if you declared it.
        ssh_public_key_pair_name: default

        flavor: m1.tiny
        timeout: 300
        nics:
          - net-name: private_net
        security_groups:
          - permit_all
        cinder:
          # This is volumes of attaching in the VM.
          # Volumes in this section must be already existed or you have to declare them in the section group_vars.openstack.cinders.volumes[].
          attachments:
            volumes:
              - name: cinder_volume01

      - name: vm2
        image: ubuntu-22.04
        ssh_public_key_pair_name: default
        flavor: m1.medium
        timeout: 300
        nics:
          - net-name: private_net
        security_groups:
          - permit_all

    cinders:
      volumes:
        - display_name: volume01
          size: 1               # Size of volume in GB.
          state: present

    # Auth environment variables that will be used command for OpenStack
    auth:
      # Parameters of auth in environment variables
      env:
        OS_USERNAME: openstack_operator
        OS_PASSWORD: secret
        OS_PROJECT_NAME: default_project
        OS_USER_DOMAIN_NAME: Default
        OS_PROJECT_DOMAIN_NAME: Default
        OS_AUTH_URL: "http://dev-controller01:5000"
        OS_IDENTITY_API_VERSION: 3

    security_groups:
      - name: permit_all
        projects:
          - default_project
        description: "Permit all packets"
        rules:
          # You can omit the name of the security group that these rules will be added.
          #
          # Permit all tcp rules.
          - protocol: tcp
            port_range_min: 1
            port_range_max: 65535
            remote_ip_prefix: 0.0.0.0/0
          # Permit ICMP
          - protocol: icmp
            port_range_min: -1
            port_range_max: -1
            remote_ip_prefix: 0.0.0.0/0

    routers:
        # name: A name of router.
        # network: Name of external ateway.
        # interfaces: Names of subnet. Parameters like "net", "subnet", "portip" might be required if you create multiple routers in same network.
      - name: private_router
        network: public
        interfaces:
          - private_subnet

    flavors:
      - name: "m1.tiny"
        ram: 512
        vcpus: 1
        disk: 2
      - name: "m1.medium"
        ram: 2048
        vcpus: 2
        disk: 8

    rbacs:
      - object_type: "network"                # Type of object that RBAC will be applied. OpenStack supports "address_group", "address_scope", "security_group", "subnetpool", "qos_policy" or "network". But this Ansible only supports "network" so far.
        object_id: "private_net"              # Object ID that RBAC will be applied. You should choose network name if you specified "network" as type for example.
        domain: "default"                     # Domain name that the target in.
        project_id: "default_project"         # Name of project that the domain and object_id in.
        target_project_id: "default_project"  # The project to which access to be allowed or revoked/disallowed.
        action: "access_as_shared"            # Name of action. You can choose "access_as_shared" or "access_as_external". You should choose "access_as_shared" if you specified an object (type: "network" and choosen internal network for example) in internal. Or you should choose "access_as_external" for others.

    ssh_public_keys:
      default:
        value: "ssh-ed25519 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx tsutomu@arch"
