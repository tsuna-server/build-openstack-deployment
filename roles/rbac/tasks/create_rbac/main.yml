---
# Variables are below.
# rbac: RBAC object that contains 'network_name', 'project_name', args that

# type of RBAC ---------------------------------------------------------------------------------------------------------------------------------------------------------
- name: "Declare type of RBAC as default if it was not specified"
  set_fact:
    rbac_object_type: "network"
  when: "'type' not in rbac"

- name: "Declare type of RBAC"
  set_fact:
    rbac_object_type: "{{ rbac.object_type }}"
  when: "'type' in rbac"

# object_id of RBAC ---------------------------------------------------------------------------------------------------------------------------------------------------------
- name: "Declare object_id of RBAC"
  set_fact:
    rbac_object_id: "{{ rbac.object_id }}"

# domain of RBAC ---------------------------------------------------------------------------------------------------------------------------------------------------------
- name: "Declare domain of RBAC"
  set_fact:
    rbac_domain: "{{ rbac.domain }}"

# target_project_id of RBAC ------------------------------------------------------------------------------------------------------------------------------------------------
- name: "Declare target_project_id of RBAC"
  set_fact:
    rbac_target_project_id: "{{ rbac.target_project_id }}"

# project_id of RBAC ------------------------------------------------------------------------------------------------------------------------------------------------
- name: "Declare project_id of RBAC"
  set_fact:
    rbac_project_id: "{{ rbac.project_id }}"

# action of RBAC ----------------------------------------------------------------------------------------------------------------------------------------------------------
- name: "Declare action of RBAC as default if it was not specified"
  set_fact:
    rbac_action: "access_as_external"
  when: "'action' not in rbac"

- name: "Declare action of RBAC"
  set_fact:
    rbac_action: "{{ rbac.action }}"
  when: "'action' in rbac"

# Convert rbac_object_id to UUID
# openstack network list --name private --project-domain default --project admin --long --format json
- name: "Convert rbac_object_id to UUID if it was needed. [command=convert_rbac_object_to_uuid.sh \"{{ rbac_object_type }}\" \"{{ rbac_object_id }}\" \"{{ rbac_domain }}\" \"{{ rbac_project_id }}\"]"
  ansible.builtin.script: ./convert_rbac_object_to_uuid.sh "{{ rbac_object_type }}" "{{ rbac_object_id }}" "{{ rbac_domain }}" "{{ rbac_project_id }}"
  register: result_convert_rbac_object_to_uuid

- name: "Declare object_uuid"
  set_fact:
    rbac_object_uuid: "{{ result_convert_rbac_object_to_uuid.stdout_lines[-1] }}"

# Create RBAC
- name: "Create a new network RBAC policy. [object_type={{ rbac_object_type }}, object_uuid={{ rbac_object_uuid }}, target_project_id={{ rbac_target_project_id }}, project_id={{ rbac_project_id }}, action={{ rbac_action }}]"
  openstack.cloud.neutron_rbac_policy:
    object_type: "{{ rbac_object_type }}"
    object_id: "{{ rbac_object_uuid }}"
    state: present
    target_project_id: "{{ rbac_target_project_id }}"
    project_id: "{{ rbac_project_id }}"
    action: "{{ rbac_action }}"

